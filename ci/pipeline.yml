jobs:
- name: testflight
  public: true
  serial: true
  plan:
  - name: main
    do:
    - name: get
      in_parallel:
      - get: git
        trigger: true
    - name: testflights
      in_parallel:
      - name: testflight
        task: testflight
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: starkandwayne/concourse
          inputs:
          - name: git
          run:
            path: ./git/ci/scripts/testflight
            args: []
          params:
            REPO_ROOT:            git
            BOSH_ENVIRONMENT:     ((bosh.url))
            BOSH_CA_CERT:         ((bosh.ca))
            BOSH_CLIENT:          ((bosh.username))
            BOSH_CLIENT_SECRET:   ((bosh.password))
            BOSH_DEPLOYMENT:      doomsday-ci
            TEST_ERRANDS:         ~
            AWS_ACCESS_KEY:       ((aws.access))
            AWS_SECRET_KEY:       ((aws.secret))
            MANIFEST_PATH:        manifests/doomsday.yml
            MANIFEST_VARS:        "--- {}"
            MANIFEST_OP_PATHS:    ""

- name: rc
  public: true
  serial: true
  plan:
  - do:
    - in_parallel:
      - get: git
        trigger: true
        passed: [testflight]
      - get: version
        trigger: false
        params:
          pre: rc
    - task: release-notes
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: starkandwayne/concourse
        inputs:
        - name: git
        run:
          path: sh
          args:
          - -ce
          - |
            cd git
            if [ -f ci/release_notes.md ]; then
              echo "######   RELEASE NOTES   ###############"
              echo
              cat ci/release_notes.md
              echo
              echo "########################################"
              echo
            else
              echo "NO RELEASE NOTES HAVE BEEN WRITTEN"
              echo "You *might* want to do that before"
              echo "hitting (+) on that shipit job..."
              echo
            fi
    - put: version
      params:
        file: version/number

- name: shipit
  public: true
  serial: true
  plan:
  - do:
    - name: inputs
      in_parallel:
      - get: version
        passed: [rc]
        params: 
          bump: final
      - get: git
        passed: [rc]
    - name: release
      task: release
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: starkandwayne/concourse
        inputs:
        - name: version
        - name: git
        outputs:
        - name: gh
        - name: pushme
        - name: notifications
        run:
          path: ./git/ci/scripts/shipit
          args: []
        params:
          REPO_ROOT:    git
          VERSION_FROM: version/number
          RELEASE_ROOT: gh
          REPO_OUT:     pushme
          NOTIFICATION_OUT: notifications
          BRANCH:        master
          GITHUB_OWNER:  ((doomsday.org))
          GIT_EMAIL:      ((github.email))
          GIT_NAME:       ((github.name)))
          AWS_ACCESS_KEY: ((aws.access))
          AWS_SECRET_KEY: ((aws.secret)))

    - name: upload-git
      put: git
      params:
        rebase: true
        repository: pushme
    - name: github-release
      put: doomsday-boshrelease
      params:
        name:   gh/name
        tag:    gh/tag
        body:   gh/notes.md
        globs: [gh/artifacts/*]
    - name: version-bump
      put: version
      params:
        bump: patch

- name: patch
  public: true
  plan:
  - do:
    - get: version
      params: 
        bump: patch
    - put: version
      params:
        file: version/number

- name: minor
  public: true
  plan:
  - do:
    - get: version
      params:
        bump: minor
    - put: version
      params:
        file: version/number

- name: major
  public: true
  plan:
  - do:
    - get: version
      params:
        bump: major
    - put: version
      params:
        file: version/number


- name: doomsday
  public: true
  plan:
  - in_parallel:
    - get: git
    - get: doomsday
      trigger: true
      params:
        globs: [doomsday-linux]
  - task: update-doomsday
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: starkandwayne/concourse
      inputs:
      - name: git
      - name: doomsday
      outputs:
      - name: pushme
      run:
        path: ./git/ci/scripts/update-blob
      params:
        REPO_ROOT:   git
        REPO_OUT:    pushme
        BLOB_DIR:    doomsday
        BLOB_NAME:   doomsday
        BLOB_BINARY: doomsday-linux
        BLOB_DESTINATION: doomsday/doomsday
        BLOB_CLEANUP:     doomsday/doomsday
        AWS_ACCESS_KEY: ((aws.access))
        AWS_SECRET_KEY: ((aws.secret))
        BRANCH:         master
  - put: git
    params:
      rebase: true
      repository: pushme/git

groups:
- name: release
  jobs:
    - testflight
    - rc
    - shipit
- name: versioning
  jobs:
    - major
    - minor
    - patch
- name: blobs
  jobs:
  - doomsday

resources:
- name: git
  type: git
  source:
    uri:         https://github.com/((doomsday.org))/doomsday-boshrelease.git
    branch:      master
    username:    ((github.username))
    password:    ((github.access-token))

- name: version
  type: semver
  source :
    driver:            s3
    bucket:            doomsday-boshrelease
    region_name:       us-east-1
    key:               version
    access_key_id:     ((aws.access))
    secret_access_key: ((aws.secret))
    initial_version:   "1.0.0"

- name: doomsday-boshrelease
  type: github-release
  source:
    user:         ((doomsday.org))
    repository:   doomsday-boshrelease
    access_token: ((github.access-token))

- name: doomsday
  type: github-release
  source:
    user:         ((doomsday.org))
    repository:   doomsday
    access_token: ((github.access-token))
